spring.application.name=blog-App-Backend
server.port=8080

#spring.datasource.url=jdbc:mysql://localhost:3306/blog_App
#spring.datasource.username=root
#spring.datasource.password=10828446
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


#for using Aws Rds

spring.datasource.url=jdbc:mysql://database-1.c81qcu4gs07c.us-east-1.rds.amazonaws.com:3306/BlogAppDb
spring.datasource.username=admin
spring.datasource.password=10828446
#
#spring.datasource.url=jdbc:mysql://${RDS_HOSTNAME}:${RDS_PORT}/${RDS_DB_NAME}
#spring.datasource.username=${RDS_USERNAME}
#spring.datasource.password=${RDS_PASSWORD}


#Kafka Properties

spring.kafka.consumer.bootstrap-servers=localhost:9092

#here in real time we use mulitple consumers so to differentate that on we need a uniq name by using below prop
spring.kafka.consumer.group-id=myGroup
#Initally first time application loading there is chance of no offset so we need to give default value
spring.kafka.consumer.auto-offset-reset=earliest
logging.level.org.springframework.kafka=info
logging.level.com.example.blogapp.kafka=DEBUG

#we will use serilaize message for producer to deserize those mesage use below prop
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

#When deserializing JSON data, there's a potential risk of deserializing malicious or unexpected classes. By specifying trusted packages, 
#you can restrict the deserialization process to only those classes that you trust, thereby mitigating security risks.
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#for supprting JSON values we have to change value prop as below instead of StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

